#!/usr/bin/env sh

echo_date() {
	echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*"
}

at_least_one_commit_exists() {
	if git rev-parse --verify HEAD >/dev/null 2>&1; then
		true
	else
		false
	fi
}

get_latest_commit() {
	git rev-parse --short HEAD
}

get_previous_commit() {
	sha="$1^"
	if is_valid_sha "${sha}"; then
		git rev-parse --short "${sha}"
	else
		echo ""
	fi
}

is_valid_sha() {
	if git rev-parse --verify "$1^{commit}" >/dev/null 2>&1; then
		true
	else
		false
	fi
}

main() {
	if ! at_least_one_commit_exists; then
		echo_date "There must be at least 1 commit; got none" >&2 && exit 1
	elif ! command -v bump-my-version >/dev/null 2>&1; then
		echo_date "'bump-my-version' must be available" >&2 && exit 1
	elif [ $# -ge 2 ]; then
		echo_date "'get-public-ip' accepts [0..1] arguments; got $#" >&2
		exit 1
	elif [ $# -eq 0 ]; then
		current=$(get_latest_commit)
	else
		current=$1
		if ! is_valid_sha "${current}"; then
			echo_date "Invalid SHA; got '${current}'" >&2 && exit 1
		fi
	fi
	previous=$(get_previous_commit "${current}")
	if ! is_valid_sha "${previous}"; then
		exit 0
	fi
	echo "current=$current, previous=$previous"

	# if [ $# -eq 0 ]; then
	#     sha=$(git rev-parse --short HEAD)
	# fi
	# if [ $# -ne 1 ]; then
	#     echo_date "'check-version-bumped' accepts 1 argument; got $#" >&2
	#     exit 1
	# fi
	# ip="$(curl -s https://api.ipify.org)"
	# if [ -n "$ip" ]; then
	#     echo "$ip"
	# else
	#     echo_date "Could not determine public IP" >&2
	#     exit 1
	# fi
}

main "$@"
